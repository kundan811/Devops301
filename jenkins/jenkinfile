node {
    
stage('Git CheckOut') {    
	git url: 'https://github.com/kundan811/Devops301.git'
	}

def project_path = "atmosphere/spring-boot-samples/spring-boot-sample-atmosphere"
dir(project_path) {
	stage('Clean Old Packages') {
		sh label: 'Clean', script: 'mvn clean'
		}
	stage('Maven Compile') {
		sh label: 'Comile', script: 'mvn compile'
		}
	stage('Maven Test') {
		sh label: 'Testing', script: 'mvn test'
		}
	stage('Maven Package') {
		sh label: 'Testing', script: 'mvn package'
		}	
 	stage('SonarQube Analysis') { 
                withSonarQubeEnv("SonarServer") {
        	        sh "mvn sonar:sonar"
                	echo "Sonar Analysis Completed"
              	      }
		}		
       	stage('Artifactory Upload') {
		def server = Artifactory.server("ArtifactoryServer")
		def uploadSpec = """{		
			"files":[
			{
				"pattern":"/root/.jenkins/workspace/greenhouse/${project_path}/target/*.jar",
				"target":"jenkins/atmosphere/Build #${env.BUILD_NUMBER}"
			}
			]
			}"""
		server.upload(uploadSpec)
   		}   
	stage('Deploy Code info Docker Env.') {
		sh label: 'Docker', script: 'docker-compose up -d --build'
		}
	stage('Geting Ready For Ansible') {
		sh label: 'Docker', script: 'cp -rf target/*.jar ../../../ansible/demo03/templates/atmosphere-v1.jar'
		sh label: 'Jenkins', script: "echo '<h1> TASK BUILD ID: ${env.BUILD_DISPLAY_NAME}</h1>' >../../../ansible/demo03/templates/jenkins.html"
		}   
    	stage('Deploy to Prod.') {
		sh label: 'Docker', script: 'ansible-playbook -i ../../../ansible/demo03/inventory ../../../ansible/demo03/webserver.yaml'
		}   
 	}   
}
